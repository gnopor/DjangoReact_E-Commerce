{"ast":null,"code":"var _jsxFileName = \"/home/gnop/Videos/django-react-boilerplate/src/containers/Checkout.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe, Elements, StripeProvider } from 'react-stripe-elements';\nimport { Button, Container, Dimmer, Divider, Form, Image, Item, Header, Message, Loader, Label, Segment, Select } from 'semantic-ui-react';\nimport { authAxios } from '../utils';\nimport { checkoutURL, orderSummaryURL, addCouponURL, addressListURL } from '../constants';\nimport { withRouter, Link } from 'react-router-dom';\n\nconst OrderPreview = props => {\n  const {\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, data && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Item.Group, {\n    relaxed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, data.order_items.map((order_item, i) => {\n    //console.log(order_item);\n    return /*#__PURE__*/React.createElement(Item, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Item.Image, {\n      size: \"tiny\",\n      src: `http://127.0.0.1:8000${order_item.item.image}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Item.Content, {\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 41\n      }\n    }, order_item.quantity, \" x \", order_item.item.title), /*#__PURE__*/React.createElement(Item.Extra, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 45\n      }\n    }, \"$\", order_item.final_price))));\n  })), /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Item.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, \"Order Total: $\", data.total, data.coupon && /*#__PURE__*/React.createElement(Label, {\n    color: \"green\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 41\n    }\n  }, \"Current coupon:  \", data.coupon.code, \" for $\", data.coupon.amount)))))));\n};\n\nclass CouponForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      code: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        code: e.target.value\n      });\n    };\n\n    this.handleSumit = e => {\n      const {\n        code\n      } = this.state;\n      this.props.handleAddCoupon(e, code);\n      this.setState({\n        code: \"\"\n      });\n    };\n  }\n\n  render() {\n    const {\n      code\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSumit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Coupon code\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter a coupon...\",\n      value: code,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nclass CheckoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      loading: false,\n      error: null,\n      success: false,\n      billingAddresses: [],\n      shippingAddresses: [],\n      selectedBillingAddress: \"\",\n      selectedShippingAddress: \"\"\n    };\n\n    this.handleGetDefaultAddresse = addresses => {\n      const filteredAddresses = addresses.filter(address => address.default === true);\n\n      if (filteredAddresses.length > 0) {\n        return filteredAddresses[0].id;\n      }\n\n      return \"\";\n    };\n\n    this.handleFetchBillingAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(addressListURL(\"B\")).then(res => {\n        this.setState({\n          billingAddresses: res.data.map(a => {\n            return {\n              key: a.id,\n              text: `${a.street_address}, ${a.apartment_address}, ${a.country}`,\n              value: a.id\n            };\n          }),\n          selectedBillingAddress: this.handleGetDefaultAddresse(res.data),\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleFetchShippingAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(addressListURL(\"S\")).then(res => {\n        this.setState({\n          shippingAddresses: res.data.map(a => {\n            return {\n              key: a.id,\n              text: `${a.street_address}, ${a.apartment_address}, ${a.country}`,\n              value: a.id\n            };\n          }),\n          selectedShippingAddress: this.handleGetDefaultAddresse(res.data),\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleFetchOrder = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(orderSummaryURL).then(res => {\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        if (err.reponse.status === 404) {\n          this.props.history.push(\"/products\");\n        } else {\n          this.setState({\n            error: err,\n            loading: false\n          });\n        }\n      });\n    };\n\n    this.handleAddCoupon = (e, code) => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      authAxios.post(addCouponURL, {\n        code\n      }).then(res => {\n        this.setState({\n          loading: false\n        });\n        this.handleFetchOrder();\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submit = ev => {\n      ev.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.props.stripe) {\n        this.props.stripe.createToken().then(result => {\n          if (result.error) {\n            this.setState({\n              error: result.error.message,\n              loading: false\n            });\n          } else {\n            this.setState({\n              error: null\n            });\n            const {\n              selectedBillingAddress,\n              selectedShippingAddress\n            } = this.state;\n            authAxios.post(checkoutURL, {\n              stripeToken: result.token.id,\n              selectedBillingAddress,\n              selectedShippingAddress\n            }).then(res => {\n              this.setState({\n                loading: false,\n                success: true\n              });\n            }).catch(err => {\n              console.log({\n                stripeToken: result.token.id,\n                selectedBillingAddress,\n                selectedShippingAddress\n              });\n              this.setState({\n                loading: false,\n                error: err\n              });\n            });\n          }\n        });\n      } else {\n        console.log(\"Stripe is not loaded\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchOrder();\n    this.handleFetchBillingAddresses();\n    this.handleFetchShippingAddresses();\n  }\n\n  render() {\n    const {\n      data,\n      error,\n      loading,\n      success,\n      billingAddresses,\n      shippingAddresses,\n      selectedBillingAddress,\n      selectedShippingAddress\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(OrderPreview, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CouponForm, {\n      handleAddCoupon: (e, code) => this.handleAddCoupon(e, code),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, \"Select a billing addresse\"), billingAddresses.length > 0 ? /*#__PURE__*/React.createElement(Select, {\n      name: \"selectedBillingAddress\",\n      value: selectedBillingAddress,\n      clearable: true,\n      options: billingAddresses,\n      selection: true,\n      onChange: this.handleSelectChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, \"You need to \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 40\n      }\n    }, \"add a billing addresse\")), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }, \"Select a shipping addresse\"), shippingAddresses.length > 0 ? /*#__PURE__*/React.createElement(Select, {\n      name: \"selectedShippingAddress\",\n      value: selectedShippingAddress,\n      clearable: true,\n      options: shippingAddresses,\n      selection: true,\n      onChange: this.handleSelectChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 25\n      }\n    }, \"You need to \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 40\n      }\n    }, \"add a shipping addresse\")), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }), billingAddresses.length < 1 || shippingAddresses.length < 1 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }\n    }, \"You need to add addresses before you can complete your puchase\") : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 29\n      }\n    }, \"Would you like to complete your puchase?\"), /*#__PURE__*/React.createElement(CardElement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 29\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 37\n      }\n    }, \"Your payment was successful\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 37\n      }\n    }, \"Go to your \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 52\n      }\n    }, \"profile\"), \" to see the order delivery status.\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submit,\n      primary: true,\n      style: {\n        marginTop: \"10px\"\n      },\n      loading: loading,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 29\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst InjectedForm = withRouter(injectStripe(CheckoutForm));\n\nconst WrappedForm = () => /*#__PURE__*/React.createElement(Container, {\n  text: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(StripeProvider, {\n  apiKey: \"pk_test_ffJsfC2lo7brg48q4ijmDjK000UJ9rB62K\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 17\n  }\n}, \"Complete your order\"), /*#__PURE__*/React.createElement(Elements, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(InjectedForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 21\n  }\n})))));\n\nexport default WrappedForm;","map":{"version":3,"sources":["/home/gnop/Videos/django-react-boilerplate/src/containers/Checkout.js"],"names":["React","Component","CardElement","injectStripe","Elements","StripeProvider","Button","Container","Dimmer","Divider","Form","Image","Item","Header","Message","Loader","Label","Segment","Select","authAxios","checkoutURL","orderSummaryURL","addCouponURL","addressListURL","withRouter","Link","OrderPreview","props","data","order_items","map","order_item","i","item","image","quantity","title","final_price","total","coupon","marginLeft","code","amount","CouponForm","state","handleChange","e","setState","target","value","handleSumit","handleAddCoupon","render","CheckoutForm","loading","error","success","billingAddresses","shippingAddresses","selectedBillingAddress","selectedShippingAddress","handleGetDefaultAddresse","addresses","filteredAddresses","filter","address","default","length","id","handleFetchBillingAddresses","get","then","res","a","key","text","street_address","apartment_address","country","catch","err","handleFetchShippingAddresses","handleFetchOrder","reponse","status","history","push","preventDefault","post","handleSelectChange","name","submit","ev","stripe","createToken","result","message","stripeToken","token","console","log","componentDidMount","JSON","stringify","marginTop","InjectedForm","WrappedForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    CardElement,\n    injectStripe,\n    Elements,\n    StripeProvider\n} from 'react-stripe-elements';\nimport {\n    Button,\n    Container,\n    Dimmer,\n    Divider,\n    Form,\n    Image,\n    Item,\n    Header,\n    Message,\n    Loader,\n    Label,\n    Segment,\n    Select\n\n} from 'semantic-ui-react';\nimport { authAxios } from '../utils';\nimport { checkoutURL, orderSummaryURL, addCouponURL, addressListURL } from '../constants';\nimport { withRouter, Link } from 'react-router-dom';\n\n\n\nconst OrderPreview = (props) => {\n    const { data } = props;\n\n    return (\n        <React.Fragment>\n            {data && (\n                <React.Fragment>\n                    <Item.Group relaxed>\n                        {data.order_items.map((order_item, i) => {\n                            //console.log(order_item);\n                            return (\n                                <Item key={i}>\n                                    <Item.Image\n                                        size=\"tiny\"\n                                        src={`http://127.0.0.1:8000${order_item.item.image}`}\n                                    />\n                                    <Item.Content verticalAlign=\"middle\">\n                                        <Item.Header as=\"a\">\n                                            {order_item.quantity} x {order_item.item.title}\n                                        </Item.Header>\n                                        <Item.Extra>\n                                            <Label>${order_item.final_price}</Label>\n                                        </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            );\n                        })}\n                    </Item.Group>\n\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Item.Header>\n                                    Order Total: ${data.total}\n                                    {data.coupon && (\n                                        <Label color=\"green\" style={{ marginLeft: \"10px\" }}>\n                                            Current coupon:  {data.coupon.code} for ${data.coupon.amount}\n                                        </Label>\n                                    )}\n                                </Item.Header>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\n\n\nclass CouponForm extends Component {\n\n    state = {\n        code: \"\"\n    };\n\n    handleChange = e => {\n        this.setState({\n            code: e.target.value\n        });\n    };\n\n    handleSumit = (e) => {\n        const { code } = this.state;\n        this.props.handleAddCoupon(e, code);\n        this.setState({ code: \"\" });\n    };\n\n    render() {\n        const { code } = this.state;\n        return (\n            <React.Fragment>\n                <Form onSubmit={this.handleSumit}>\n                    <Form.Field>\n                        <label>Coupon code</label>\n                        <input placeholder=\"Enter a coupon...\" value={code} onChange={this.handleChange} />\n                    </Form.Field>\n                    <Button type=\"submit\">Submit</Button>\n                </Form>\n            </React.Fragment>\n        );\n    }\n}\n\n\n\nclass CheckoutForm extends Component {\n\n    state = {\n        data: null,\n        loading: false,\n        error: null,\n        success: false,\n        billingAddresses: [],\n        shippingAddresses: [],\n        selectedBillingAddress: \"\",\n        selectedShippingAddress: \"\"\n    };\n\n\n    componentDidMount() {\n        this.handleFetchOrder();\n        this.handleFetchBillingAddresses();\n        this.handleFetchShippingAddresses();\n    }\n\n    handleGetDefaultAddresse = addresses => {\n        const filteredAddresses = addresses.filter(address => address.default === true);\n        if (filteredAddresses.length > 0) {\n            return filteredAddresses[0].id;\n        }\n        return \"\";\n    }\n\n    handleFetchBillingAddresses = () => {\n        this.setState({ loading: true });\n        authAxios\n            .get(addressListURL(\"B\"))\n            .then(res => {\n                this.setState({\n                    billingAddresses: res.data.map(a => {\n                        return {\n                            key: a.id,\n                            text: `${a.street_address}, ${a.apartment_address}, ${a.country}`,\n                            value: a.id\n                        }\n                    }),\n                    selectedBillingAddress: this.handleGetDefaultAddresse(res.data),\n                    loading: false\n                });\n            })\n            .catch(err => {\n                this.setState({ error: err, loading: false });\n            });\n    };\n\n    handleFetchShippingAddresses = () => {\n        this.setState({ loading: true });\n        authAxios\n            .get(addressListURL(\"S\"))\n            .then(res => {\n                this.setState({\n                    shippingAddresses: res.data.map(a => {\n                        return {\n                            key: a.id,\n                            text: `${a.street_address}, ${a.apartment_address}, ${a.country}`,\n                            value: a.id\n                        }\n                    }),\n                    selectedShippingAddress: this.handleGetDefaultAddresse(res.data),\n\n                    loading: false\n                });\n            })\n            .catch(err => {\n                this.setState({ error: err, loading: false });\n            });\n    };\n\n\n    handleFetchOrder = () => {\n        this.setState({ loading: true });\n        authAxios\n            .get(orderSummaryURL)\n            .then(res => {\n                this.setState({ data: res.data, loading: false });\n            })\n            .catch(err => {\n                if (err.reponse.status === 404) {\n                    this.props.history.push(\"/products\");\n                } else {\n                    this.setState({ error: err, loading: false });\n                }\n            });\n    };\n\n\n    handleAddCoupon = (e, code) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        authAxios\n            .post(addCouponURL, { code })\n            .then(res => {\n                this.setState({ loading: false });\n                this.handleFetchOrder();\n            })\n            .catch(err => {\n\n                this.setState({ error: err, loading: false });\n\n            });\n    };\n\n    handleSelectChange = (e, { name, value }) => {\n        this.setState({ [name]: value });\n    };\n\n    submit = (ev) => {\n        ev.preventDefault();\n        this.setState({ loading: true });\n        if (this.props.stripe) {\n            this.props.stripe.createToken()\n                .then(result => {\n                    if (result.error) {\n                        this.setState({ error: result.error.message, loading: false });\n                    } else {\n                        this.setState({ error: null });\n                        const {\n                            selectedBillingAddress,\n                            selectedShippingAddress\n                        } = this.state;\n\n                        authAxios\n                            .post(checkoutURL, {\n                                stripeToken: result.token.id,\n                                selectedBillingAddress,\n                                selectedShippingAddress\n                            })\n                            .then(res => {\n                                this.setState({ loading: false, success: true });\n                            })\n                            .catch(err => {\n                                console.log({\n                                    stripeToken: result.token.id,\n                                    selectedBillingAddress,\n                                    selectedShippingAddress\n                                });\n                                this.setState({ loading: false, error: err });\n                            });\n                    }\n                });\n        } else {\n            console.log(\"Stripe is not loaded\");\n        }\n\n    };\n\n    render() {\n        const { data,\n            error,\n            loading,\n            success,\n            billingAddresses,\n            shippingAddresses,\n            selectedBillingAddress,\n            selectedShippingAddress\n        } = this.state;\n        return (\n            <div>\n                {error && (\n                    <Message\n                        error\n                        header='There was some errors with your submission'\n                        content={JSON.stringify(error)}\n                    />\n                )}\n                {loading && (\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader inverted>Loading</Loader>\n                        </Dimmer>\n\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                    </Segment>\n                )}\n\n                <OrderPreview data={data} />\n\n\n                <Divider />\n                <CouponForm handleAddCoupon={(e, code) => this.handleAddCoupon(e, code)} />\n                <Divider />\n\n                <Header>Select a billing addresse</Header>\n                {billingAddresses.length > 0 ? (\n                    <Select\n                        name=\"selectedBillingAddress\"\n                        value={selectedBillingAddress}\n                        clearable options={billingAddresses}\n                        selection\n                        onChange={this.handleSelectChange} />\n                ) : (\n                        <p>You need to <Link to=\"/profile\">add a billing addresse</Link></p>\n                    )}\n\n\n                <Header>Select a shipping addresse</Header>\n                {shippingAddresses.length > 0 ? (\n                    <Select\n                        name=\"selectedShippingAddress\"\n                        value={selectedShippingAddress}\n                        clearable options={shippingAddresses}\n                        selection\n                        onChange={this.handleSelectChange} />\n                ) : (\n                        <p>You need to <Link to=\"/profile\">add a shipping addresse</Link></p>\n                    )}\n                <Divider />\n\n\n                {billingAddresses.length < 1 || shippingAddresses.length < 1 ? (\n                    <p>You need to add addresses before you can complete your puchase</p>\n                ) : (\n                        <React.Fragment>\n\n                            <Header>Would you like to complete your puchase?</Header>\n                            <CardElement />\n                            {success && (\n                                <Message positive>\n                                    <Message.Header>Your payment was successful</Message.Header>\n                                    <p>\n                                        Go to your <b>profile</b> to see the order delivery status.\n                        </p>\n                                </Message>\n                            )}\n                            <Button\n                                onClick={this.submit}\n                                primary\n                                style={{ marginTop: \"10px\" }}\n                                loading={loading}\n                                disabled={loading}\n                            >\n                                Submit\n                            </Button>\n                        </React.Fragment>\n                    )}\n\n            </div>\n        );\n    }\n}\n\n\nconst InjectedForm = withRouter(injectStripe(CheckoutForm));\n\n\nconst WrappedForm = () => (\n    <Container text>\n        <StripeProvider apiKey=\"pk_test_ffJsfC2lo7brg48q4ijmDjK000UJ9rB62K\">\n            <div>\n                <h1>Complete your order</h1>\n                <Elements>\n                    <InjectedForm />\n                </Elements>\n\n            </div>\n\n        </StripeProvider>\n    </Container>\n);\n\nexport default WrappedForm;"]},"metadata":{},"sourceType":"module"}