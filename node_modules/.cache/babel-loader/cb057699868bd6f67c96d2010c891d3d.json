{"ast":null,"code":"var _jsxFileName = \"/home/gnop/Videos/django-react-boilerplate/src/containers/ProductDetail.js\";\nimport React from 'react';\nimport { Button, Container, Dimmer, Icon, Image, Item, Header, Label, Loader, Message, Segment, Card, Grid, Form, Divider, Select } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { addToCartURL, productDetailURL } from '../constants';\nimport { authAxios } from '../utils';\nimport { fetchCart } from '../store/actions/cart';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nclass ProductDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      data: [],\n      formVisible: false,\n      formData: {}\n    };\n\n    this.handleToggleForm = () => {\n      const {\n        formVisible\n      } = this.state;\n      this.setState({\n        formVisible: !formVisible\n      });\n    };\n\n    this.handleFetchItem = () => {\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      this.setState({\n        loading: true\n      });\n      axios.get(productDetailURL(params.productID)).then(res => {\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleFormData = formData => {\n      return Object.keys(formData).map(key => {\n        return formData[key];\n      });\n    };\n\n    this.handleAddToCart = slug => {\n      this.setState({\n        loading: true\n      });\n      const {\n        formData\n      } = this.state;\n      const variations = this.handleFormData(formData);\n      console.log(variations);\n      /*         authAxios\n                  .post(addToCartURL, { slug })\n                  .then(res => {\n                      this.props.fetchCart();\n                      this.setState({ loading: false });\n                  })\n                  .catch(err => {\n                      this.setState({ error: err, loading: false });\n                  }); */\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormData = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchItem();\n  }\n\n  render() {\n    const {\n      data,\n      error,\n      formData,\n      formVisible,\n      loading\n    } = this.state;\n    const item = data;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      content: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Image, {\n      src: \"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      image: item.image,\n      header: item.title,\n      meta: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }\n      }, item.category, item.discount_price && /*#__PURE__*/React.createElement(Label, {\n        color: item.label === \"primary\" ? \"blue\" : item.label === \"secondary\" ? \"green\" : \"olive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }\n      }, item.label)),\n      description: item.description,\n      extra: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        fluid: true,\n        color: \"yellow\",\n        icon: true,\n        labelPosition: \"right\",\n        onClick: this.handleToggleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }\n      }, \"Add to Cart\", /*#__PURE__*/React.createElement(Icon, {\n        name: \"cart plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }), formVisible && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, data.variations.map(v => {\n      const name = v.name.toLowerCase();\n      return /*#__PURE__*/React.createElement(Form.Field, {\n        key: v.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        name: name,\n        onChange: this.handleChange,\n        options: v.item_variations.map(item => {\n          return {\n            key: item.id,\n            text: item.value,\n            value: item.id\n          };\n        }),\n        placeholder: `Choose ${name}`,\n        selection: true,\n        value: formData[name],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 53\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      primary: true,\n      onClick: () => this.handleAddToCart(item.slug),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 41\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, \"Try different variations\"), data.variations && data.variations.map(v => {\n      //v stand for variations\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: v.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 45\n        }\n      }, v.name), /*#__PURE__*/React.createElement(Item.Group, {\n        divided: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 45\n        }\n      }, v.item_variations.map(iv => {\n        // iv stand for item variations\n        return /*#__PURE__*/React.createElement(Item, {\n          key: iv.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 57\n          }\n        }, iv.attachment && /*#__PURE__*/React.createElement(Item.Image, {\n          size: \"tiny\",\n          src: `http://127.0.0.1:8000${iv.attachment}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 65\n          }\n        }), /*#__PURE__*/React.createElement(Item.Content, {\n          verticalAlign: \"middle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 61\n          }\n        }, iv.value));\n      })));\n    })))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));","map":{"version":3,"sources":["/home/gnop/Videos/django-react-boilerplate/src/containers/ProductDetail.js"],"names":["React","Button","Container","Dimmer","Icon","Image","Item","Header","Label","Loader","Message","Segment","Card","Grid","Form","Divider","Select","axios","addToCartURL","productDetailURL","authAxios","fetchCart","connect","withRouter","ProductDetail","Component","state","loading","error","data","formVisible","formData","handleToggleForm","setState","handleFetchItem","match","params","props","get","productID","then","res","catch","err","handleFormData","Object","keys","map","key","handleAddToCart","slug","variations","console","log","handleChange","e","name","value","updatedFormData","componentDidMount","render","item","JSON","stringify","image","title","category","discount_price","label","description","v","toLowerCase","id","item_variations","text","iv","attachment","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Container, Dimmer, Icon, Image, Item, Header, Label, Loader, Message, Segment, Card, Grid, Form, Divider, Select } from 'semantic-ui-react'\nimport axios from 'axios';\n\nimport { addToCartURL, productDetailURL } from '../constants';\nimport { authAxios } from '../utils';\nimport { fetchCart } from '../store/actions/cart';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n\nclass ProductDetail extends React.Component {\n\n    state = {\n        loading: false,\n        error: null,\n        data: [],\n        formVisible: false,\n        formData: {}\n    };\n\n    componentDidMount() {\n        this.handleFetchItem();\n    }\n\n    handleToggleForm = () => {\n        const { formVisible } = this.state;\n        this.setState({\n            formVisible: !formVisible\n        });\n    };\n\n    handleFetchItem = () => {\n        const {\n            match: { params }\n        } = this.props;\n        this.setState({ loading: true });\n        axios\n            .get(productDetailURL(params.productID))\n            .then(res => {\n                this.setState({ data: res.data, loading: false });\n            })\n            .catch(err => {\n                this.setState({ error: err, loading: false });\n            });\n    }\n\n    handleFormData = formData => {\n        return Object.keys(formData).map(key => {\n            return formData[key];\n        });\n    };\n\n    handleAddToCart = slug => {\n        this.setState({ loading: true });\n        const { formData } = this.state;\n        const variations = this.handleFormData(formData);\n        console.log(variations);\n        /*         authAxios\n                    .post(addToCartURL, { slug })\n                    .then(res => {\n                        this.props.fetchCart();\n                        this.setState({ loading: false });\n                    })\n                    .catch(err => {\n                        this.setState({ error: err, loading: false });\n                    }); */\n    }\n\n    handleChange = (e, { name, value }) => {\n        const { formData } = this.state;\n        const updatedFormData = {\n            ...formData,\n            [name]: value\n        };\n        this.setState({ formData: updatedFormData });\n    };\n\n    render() {\n        const { data, error, formData, formVisible, loading } = this.state;\n        const item = data;\n        return (\n            <Container>\n\n                {error && (\n                    <Message\n                        error\n                        header='There was some errors with your submission'\n                        content={JSON.stringify(error)}\n                    />\n                )}\n                {\n                    loading && (\n                        <Segment>\n                            <Dimmer active inverted>\n                                <Loader inverted content='Loading' />\n                            </Dimmer>\n\n                            <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                        </Segment>\n                    )\n                }\n                <Grid columns={2} divided>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Card\n                                fluid\n                                image={item.image}\n                                header={item.title}\n                                meta={\n                                    <React.Fragment>\n                                        {item.category}\n                                        {item.discount_price && (\n                                            <Label color={\n                                                item.label === \"primary\" ? \"blue\" :\n                                                    item.label === \"secondary\" ? \"green\" :\n                                                        \"olive\"\n                                            }>\n                                                {item.label}\n                                            </Label>\n                                        )}\n                                    </React.Fragment>\n                                }\n                                description={item.description}\n                                extra={\n                                    <React.Fragment>\n                                        <Button fluid color=\"yellow\" icon labelPosition=\"right\" onClick={this.handleToggleForm}>\n                                            Add to Cart\n                                    <Icon name='cart plus' />\n                                        </Button>\n                                    </React.Fragment>\n                                }\n                            />\n                            {formVisible && (\n                                <React.Fragment>\n                                    <Divider />\n                                    <Form>\n                                        {data.variations.map(v => {\n                                            const name = v.name.toLowerCase();\n                                            return (\n                                                <Form.Field key={v.id}>\n                                                    <Select\n                                                        name={name}\n                                                        onChange={this.handleChange}\n                                                        options={v.item_variations.map(item => {\n                                                            return {\n                                                                key: item.id,\n                                                                text: item.value,\n                                                                value: item.id\n                                                            };\n                                                        })}\n                                                        placeholder={`Choose ${name}`}\n                                                        selection\n                                                        value={formData[name]}\n                                                    />\n                                                </Form.Field>\n                                            );\n                                        })}\n                                        <Form.Button primary onClick={() => this.handleAddToCart(item.slug)}>\n                                            Submit\n                                        </Form.Button>\n                                    </Form>\n                                </React.Fragment>\n                            )}\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <Header as=\"h2\">Try different variations</Header>\n\n                            {data.variations &&\n                                data.variations.map(v => { //v stand for variations\n                                    return (\n                                        <React.Fragment key={v.id}>\n\n                                            <Header as=\"h3\">{v.name}</Header>\n\n                                            <Item.Group divided >\n                                                {v.item_variations.map(iv => { // iv stand for item variations\n                                                    return (\n                                                        <Item key={iv.id}>\n                                                            {iv.attachment &&\n                                                                <Item.Image\n                                                                    size=\"tiny\"\n                                                                    src={`http://127.0.0.1:8000${iv.attachment}`}\n                                                                />\n                                                            }\n                                                            <Item.Content verticalAlign=\"middle\">\n                                                                {iv.value}\n                                                            </Item.Content>\n                                                        </Item>\n                                                    );\n                                                })}\n                                            </Item.Group>\n\n                                        </React.Fragment>\n\n                                    );\n                                })\n                            }\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n\n\n            </Container>\n\n        );\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCart: () => dispatch(fetchCart())\n    };\n};\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}