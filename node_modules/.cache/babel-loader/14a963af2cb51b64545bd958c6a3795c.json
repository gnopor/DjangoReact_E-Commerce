{"ast":null,"code":"var _jsxFileName = \"/home/gnop/Videos/django-react-boilerplate/src/containers/Profile.js\";\nimport React from 'react';\nimport { Grid, Header, Dimmer, Loader, Message, Segment, Image, Divider, Menu, Form, Select, Card, Label, Button } from 'semantic-ui-react';\nimport { authAxios } from '../utils';\nimport { addressListURL, countryListURL, addressCreateURL, userIDURL } from '../constants';\nimport { cartFail } from '../store/actions/cart';\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        default: false\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updateFormData = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updateFormData\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updateFormData = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updateFormData\n      });\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updateFormData = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updateFormData\n      });\n    };\n\n    this.handleCreateAddress = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        activeItem,\n        formData,\n        userID\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: true,\n          success: true\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleCreateAddress,\n      success: success,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Street address\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Apartment address\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      loading: countries.length < 1,\n      clearable: true,\n      search: true,\n      options: countries,\n      fluid: true,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"zip\",\n      placeholder: \"Zip code\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address\",\n      onChange: this.handleToggleDefault,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      primary: true,\n      disabled: saving,\n      loading: saving,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"billingAddress\",\n      addresses: [],\n      countries: [],\n      userID: null\n    };\n\n    this.handleItemClick = name => {\n      // we use a callback on the setState here because we want the activeItem to be set before \n      // the execution of handleFetchAddress().\n      // withou that, this.handleFetchAddress() is call before this.setState(). there are in different thread\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading,\n      addresses,\n      countries\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      content: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Image, {\n      src: \"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Payment history\",\n      active: activeItem === \"paymentHistory\",\n      onClick: () => this.handleItemClick(\"paymentHistory\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, `Update your ${activeItem === \"billingAddress\" ? \"billing\" : \"shipping\"} address`), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }, addresses.map(a => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: a.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 41\n        }\n      }, a.default && /*#__PURE__*/React.createElement(Label, {\n        as: \"a\",\n        color: \"blue\",\n        ribbon: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 49\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 45\n        }\n      }, a.street_address, \", \", a.apartment_address), /*#__PURE__*/React.createElement(Card.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 45\n        }\n      }, a.country), /*#__PURE__*/React.createElement(Card.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 45\n        }\n      }, a.zip)), /*#__PURE__*/React.createElement(Card.Content, {\n        extra: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 45\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 45\n        }\n      }, \"Delete\")));\n    })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 49\n      }\n    }) : null, /*#__PURE__*/React.createElement(AddressForm, {\n      countries: countries,\n      addresses: addresses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/gnop/Videos/django-react-boilerplate/src/containers/Profile.js"],"names":["React","Grid","Header","Dimmer","Loader","Message","Segment","Image","Divider","Menu","Form","Select","Card","Label","Button","authAxios","addressListURL","countryListURL","addressCreateURL","userIDURL","cartFail","AddressForm","Component","state","error","loading","formData","default","saving","success","handleChange","e","updateFormData","target","name","value","setState","handleSelectChange","handleToggleDefault","handleCreateAddress","preventDefault","activeItem","userID","post","user","address_type","then","res","catch","err","render","countries","length","JSON","stringify","Profile","addresses","handleItemClick","handleFetchAddresses","handleFormatCountries","keys","Object","map","k","key","text","handleFetchCountries","get","data","handleFetchUserID","componentDidMount","a","id","street_address","apartment_address","country","zip"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDC,OAAhD,EAAyDC,KAAzD,EAAgEC,OAAhE,EAAyEC,IAAzE,EAA+EC,IAA/E,EAAqFC,MAArF,EAA6FC,IAA7F,EAAmGC,KAAnG,EAA0GC,MAA1G,QAAwH,mBAAxH;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,gBAAzC,EAA2DC,SAA3D,QAA4E,cAA5E;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAGA,MAAMC,WAAN,SAA0BrB,KAAK,CAACsB,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAHN;AAIJC,MAAAA,MAAM,EAAE,KAJJ;AAKJC,MAAAA,OAAO,EAAE;AALL,KAD8B;;AAAA,SAUtCC,YAVsC,GAUvBC,CAAC,IAAI;AAChB,YAAM;AAAEL,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMS,cAAc,GAAG,EACnB,GAAGN,QADgB;AAEnB,SAACK,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAFP,OAAvB;AAIA,WAAKC,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAEM;AADA,OAAd;AAGH,KAnBqC;;AAAA,SAsBtCK,kBAtBsC,GAsBjB,CAACN,CAAD,EAAI;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAJ,KAAwB;AACzC,YAAM;AAAET,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMS,cAAc,GAAG,EACnB,GAAGN,QADgB;AAEnB,SAACQ,IAAD,GAAQC;AAFW,OAAvB;AAIA,WAAKC,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAEM;AADA,OAAd;AAGH,KA/BqC;;AAAA,SAkCtCM,mBAlCsC,GAkChB,MAAM;AACxB,YAAM;AAAEZ,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMS,cAAc,GAAG,EACnB,GAAGN,QADgB;AAEnBC,QAAAA,OAAO,EAAE,CAACD,QAAQ,CAACC;AAFA,OAAvB;AAIA,WAAKS,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAEM;AADA,OAAd;AAGH,KA3CqC;;AAAA,SA4CtCO,mBA5CsC,GA4ChBR,CAAC,IAAI;AACvB,WAAKK,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAE;AAAV,OAAd;AACAG,MAAAA,CAAC,CAACS,cAAF;AACA,YAAM;AAAEC,QAAAA,UAAF;AAAcf,QAAAA,QAAd;AAAwBgB,QAAAA;AAAxB,UAAmC,KAAKnB,KAA9C;AACAR,MAAAA,SAAS,CACJ4B,IADL,CACUzB,gBADV,EAC4B,EACpB,GAAGQ,QADiB;AAEpBkB,QAAAA,IAAI,EAAEF,MAFc;AAGpBG,QAAAA,YAAY,EAAEJ,UAAU,KAAK,gBAAf,GAAkC,GAAlC,GAAwC;AAHlC,OAD5B,EAMKK,IANL,CAMUC,GAAG,IAAI;AACT,aAAKX,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAE,IAAV;AAAgBC,UAAAA,OAAO,EAAE;AAAzB,SAAd;AACH,OARL,EASKmB,KATL,CASWC,GAAG,IAAI;AACV,aAAKb,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEyB;AAAT,SAAd;AACH,OAXL;AAaH,KA7DqC;AAAA;;AA+DtCC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKX,mBAArB;AAA0C,MAAA,OAAO,EAAEV,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,gBAFT;AAGI,MAAA,WAAW,EAAC,gBAHhB;AAII,MAAA,QAAQ,EAAE,KAAKC,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,mBAFT;AAGI,MAAA,WAAW,EAAC,mBAHhB;AAII,MAAA,QAAQ,EAAE,KAAKA,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eAeI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEqB,SAAS,CAACC,MAAV,GAAmB,CADhC;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,MAAM,MAHV;AAII,MAAA,OAAO,EAAED,SAJb;AAKI,MAAA,KAAK,MALT;AAMI,MAAA,IAAI,EAAC,SANT;AAOI,MAAA,WAAW,EAAC,SAPhB;AAQI,MAAA,QAAQ,EAAE,KAAKd,kBARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfJ,eA2BI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,KAFT;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,QAAQ,EAAE,KAAKP,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,eAkCI,oBAAC,OAAD;AACI,MAAA,OAAO,MADX;AAEI,MAAA,MAAM,EAAC,UAFX;AAGI,MAAA,OAAO,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCJ,EAuCKN,KAAK,iBACF,oBAAC,OAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,MAAM,EAAC,oBAFX;AAGI,MAAA,OAAO,EAAE6B,IAAI,CAACC,SAAL,CAAe9B,KAAf,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCR,eA8CI,oBAAC,IAAD,CAAM,QAAN;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,KAAK,EAAC,+BAFV;AAGI,MAAA,QAAQ,EAAE,KAAKc,mBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CJ,eAmDI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,MAApB;AAAqB,MAAA,QAAQ,EAAEV,MAA/B;AAAuC,MAAA,OAAO,EAAEA,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDJ,CADJ;AAwDH;;AAxHqC;;AA2H1C,MAAM2B,OAAN,SAAsBvD,KAAK,CAACsB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACJkB,MAAAA,UAAU,EAAE,gBADR;AAEJe,MAAAA,SAAS,EAAE,EAFP;AAGJL,MAAAA,SAAS,EAAE,EAHP;AAIJT,MAAAA,MAAM,EAAE;AAJJ,KAD0B;;AAAA,SAclCe,eAdkC,GAcfvB,IAAD,IAAU;AACxB;AACA;AACA;AACA,WAAKE,QAAL,CAAc;AAAEK,QAAAA,UAAU,EAAEP;AAAd,OAAd,EAAoC,MAAM;AACtC,aAAKwB,oBAAL;AACH,OAFD;AAIH,KAtBiC;;AAAA,SAwBlCC,qBAxBkC,GAwBVR,SAAS,IAAI;AACjC,YAAMS,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYT,SAAZ,CAAb;AACA,aAAOS,IAAI,CAACE,GAAL,CAASC,CAAC,IAAI;AACjB,eAAO;AACHC,UAAAA,GAAG,EAAED,CADF;AAEHE,UAAAA,IAAI,EAAEd,SAAS,CAACY,CAAD,CAFZ;AAGH5B,UAAAA,KAAK,EAAE4B;AAHJ,SAAP;AAKH,OANM,CAAP;AAOH,KAjCiC;;AAAA,SAoClCG,oBApCkC,GAoCX,MAAM;AACzBnD,MAAAA,SAAS,CACJoD,GADL,CACSlD,cADT,EAEK6B,IAFL,CAEUC,GAAG,IAAI;AACT,aAAKX,QAAL,CAAc;AAAEe,UAAAA,SAAS,EAAE,KAAKQ,qBAAL,CAA2BZ,GAAG,CAACqB,IAA/B;AAAb,SAAd;AACH,OAJL,EAKKpB,KALL,CAKWC,GAAG,IAAI;AACV,aAAKb,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEyB;AAAT,SAAd;AACH,OAPL;AAQH,KA7CiC;;AAAA,SA+ClCoB,iBA/CkC,GA+Cd,MAAM;AACtBtD,MAAAA,SAAS,CACJoD,GADL,CACShD,SADT,EAEK2B,IAFL,CAEUC,GAAG,IAAI;AACT,aAAKX,QAAL,CAAc;AAAEM,UAAAA,MAAM,EAAEK,GAAG,CAACqB,IAAJ,CAAS1B;AAAnB,SAAd;AACH,OAJL,EAKKM,KALL,CAKWC,GAAG,IAAI;AACV,aAAKb,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEyB;AAAT,SAAd;AACH,OAPL;AAQH,KAxDiC;;AAAA,SA0DlCS,oBA1DkC,GA0DX,MAAM;AACzB,WAAKtB,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAM;AAAEgB,QAAAA;AAAF,UAAiB,KAAKlB,KAA5B;AACAR,MAAAA,SAAS,CACJoD,GADL,CAEQnD,cAAc,CAACyB,UAAU,KAAK,gBAAf,GAAkC,GAAlC,GAAwC,GAAzC,CAFtB,EAIKK,IAJL,CAIUC,GAAG,IAAI;AACT,aAAKX,QAAL,CAAc;AAAEoB,UAAAA,SAAS,EAAET,GAAG,CAACqB,IAAjB;AAAuB3C,UAAAA,OAAO,EAAE;AAAhC,SAAd;AACH,OANL,EAOKuB,KAPL,CAOWC,GAAG,IAAI;AACV,aAAKb,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEyB;AAAT,SAAd;AACH,OATL;AAUH,KAvEiC;AAAA;;AAQlCqB,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,oBAAL;AACA,SAAKQ,oBAAL;AACA,SAAKG,iBAAL;AACH;;AAgEDnB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA,UAAF;AAAcjB,MAAAA,KAAd;AAAqBC,MAAAA,OAArB;AAA8B+B,MAAAA,SAA9B;AAAyCL,MAAAA;AAAzC,QAAuD,KAAK5B,KAAlE;AACA,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,OAAO,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,KAAK,iBACF,oBAAC,OAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,MAAM,EAAC,oBAFX;AAGI,MAAA,OAAO,EAAE6B,IAAI,CAACC,SAAL,CAAe9B,KAAf,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,EASQC,OAAO,iBACH,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,OAAO,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAKI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,oEAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAVZ,CADJ,CADJ,eAuBI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,iBADT;AAEI,MAAA,MAAM,EAAEgB,UAAU,KAAK,gBAF3B;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKgB,eAAL,CAAqB,gBAArB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,kBADT;AAEI,MAAA,MAAM,EAAEhB,UAAU,KAAK,iBAF3B;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKgB,eAAL,CAAqB,iBAArB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAWI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,iBADT;AAEI,MAAA,MAAM,EAAEhB,UAAU,KAAK,gBAF3B;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKgB,eAAL,CAAqB,gBAArB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CAFJ,CADJ,eAsBI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,eAAchB,UAAU,KAAK,gBAAf,GAAkC,SAAlC,GAA8C,UAAW,UAD7E,CADJ,eAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKe,SAAS,CAACM,GAAV,CAAcS,CAAC,IAAI;AAChB,0BACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,CAAC,CAAC5C,OAAF,iBACG,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,GAAV;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,QAAA,MAAM,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFR,eAMI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK4C,CAAC,CAACE,cADP,QACyBF,CAAC,CAACG,iBAD3B,CANJ,eASI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYH,CAAC,CAACI,OAAd,CATJ,eAUI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBJ,CAAC,CAACK,GAArB,CAVJ,CADJ,eAcI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAdJ,CADJ;AAsBH,KAvBA,CADL,CALJ,EA+BKpB,SAAS,CAACJ,MAAV,GAAmB,CAAnB,gBAAuB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,GAAqC,IA/B1C,eAiCI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAED,SAAxB;AAAmC,MAAA,SAAS,EAAEK,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCJ,CAtBJ,CAvBJ,CADJ;AAqFH;;AAnKiC;;AAsKtC,eAAeD,OAAf","sourcesContent":["import React from 'react';\nimport { Grid, Header, Dimmer, Loader, Message, Segment, Image, Divider, Menu, Form, Select, Card, Label, Button } from 'semantic-ui-react';\nimport { authAxios } from '../utils';\nimport { addressListURL, countryListURL, addressCreateURL, userIDURL } from '../constants';\nimport { cartFail } from '../store/actions/cart';\n\n\nclass AddressForm extends React.Component {\n    state = {\n        error: null,\n        loading: false,\n        formData: { default: false },\n        saving: false,\n        success: false\n    };\n\n\n    handleChange = e => {\n        const { formData } = this.state;\n        const updateFormData = {\n            ...formData,\n            [e.target.name]: e.target.value\n        };\n        this.setState({\n            formData: updateFormData\n        });\n    };\n\n\n    handleSelectChange = (e, { name, value }) => {\n        const { formData } = this.state;\n        const updateFormData = {\n            ...formData,\n            [name]: value\n        };\n        this.setState({\n            formData: updateFormData\n        });\n    };\n\n\n    handleToggleDefault = () => {\n        const { formData } = this.state;\n        const updateFormData = {\n            ...formData,\n            default: !formData.default\n        };\n        this.setState({\n            formData: updateFormData\n        });\n    };\n    handleCreateAddress = e => {\n        this.setState({ saving: true });\n        e.preventDefault();\n        const { activeItem, formData, userID } = this.state;\n        authAxios\n            .post(addressCreateURL, {\n                ...formData,\n                user: userID,\n                address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n            })\n            .then(res => {\n                this.setState({ saving: true, success: true });\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n\n    };\n\n    render() {\n        return (\n            <Form onSubmit={this.handleCreateAddress} success={success}>\n                <Form.Input\n                    required\n                    name=\"street_address\"\n                    placeholder=\"Street address\"\n                    onChange={this.handleChange}\n\n                />\n                <Form.Input\n                    required\n                    name=\"apartment_address\"\n                    placeholder=\"Apartment address\"\n                    onChange={this.handleChange}\n\n                />\n                <Form.Field required>\n                    <Select\n                        loading={countries.length < 1}\n                        clearable\n                        search\n                        options={countries}\n                        fluid\n                        name=\"country\"\n                        placeholder=\"Country\"\n                        onChange={this.handleSelectChange}\n                    />\n                </Form.Field>\n                <Form.Input\n                    required\n                    name=\"zip\"\n                    placeholder=\"Zip code\"\n                    onChange={this.handleChange}\n\n                />\n                <Message\n                    success\n                    header=\"Success!\"\n                    content=\"Your address was saved\"\n                />\n                {error && (\n                    <Message\n                        error\n                        header='There was an error'\n                        content={JSON.stringify(error)}\n                    />\n                )}\n                <Form.Checkbox\n                    name=\"default\"\n                    label=\"Make this the default address\"\n                    onChange={this.handleToggleDefault}\n                />\n                <Form.Button primary disabled={saving} loading={saving}>Save</Form.Button>\n\n            </Form>\n        );\n    }\n}\n\nclass Profile extends React.Component {\n    state = {\n        activeItem: \"billingAddress\",\n        addresses: [],\n        countries: [],\n        userID: null\n    };\n\n    componentDidMount() {\n        this.handleFetchAddresses();\n        this.handleFetchCountries();\n        this.handleFetchUserID();\n    }\n\n    handleItemClick = (name) => {\n        // we use a callback on the setState here because we want the activeItem to be set before \n        // the execution of handleFetchAddress().\n        // withou that, this.handleFetchAddress() is call before this.setState(). there are in different thread\n        this.setState({ activeItem: name }, () => {\n            this.handleFetchAddresses();\n        });\n\n    }\n\n    handleFormatCountries = countries => {\n        const keys = Object.keys(countries);\n        return keys.map(k => {\n            return {\n                key: k,\n                text: countries[k],\n                value: k\n            };\n        });\n    };\n\n\n    handleFetchCountries = () => {\n        authAxios\n            .get(countryListURL)\n            .then(res => {\n                this.setState({ countries: this.handleFormatCountries(res.data) });\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n    handleFetchUserID = () => {\n        authAxios\n            .get(userIDURL)\n            .then(res => {\n                this.setState({ userID: res.data.userID });\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n    handleFetchAddresses = () => {\n        this.setState({ loading: true });\n        const { activeItem } = this.state;\n        authAxios\n            .get(\n                addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")\n            )\n            .then(res => {\n                this.setState({ addresses: res.data, loading: false });\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n\n\n\n    render() {\n        const { activeItem, error, loading, addresses, countries } = this.state;\n        return (\n            <Grid container columns={2} divided>\n                <Grid.Row columns={1}>\n                    <Grid.Column>\n                        {error && (\n                            <Message\n                                error\n                                header='There was an error'\n                                content={JSON.stringify(error)}\n                            />\n                        )}\n                        {\n                            loading && (\n                                <Segment>\n                                    <Dimmer active inverted>\n                                        <Loader inverted content='Loading' />\n                                    </Dimmer>\n\n                                    <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                                </Segment>\n                            )\n                        }\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={6}>\n\n                        <Menu pointing vertical fluid>\n                            <Menu.Item\n                                name=\"Billing Address\"\n                                active={activeItem === \"billingAddress\"}\n                                onClick={() => this.handleItemClick(\"billingAddress\")}\n                            />\n                            <Menu.Item\n                                name=\"Shipping Address\"\n                                active={activeItem === \"shippingAddress\"}\n                                onClick={() => this.handleItemClick(\"shippingAddress\")}\n                            />\n                            <Menu.Item\n                                name=\"Payment history\"\n                                active={activeItem === \"paymentHistory\"}\n                                onClick={() => this.handleItemClick(\"paymentHistory\")}\n                            />\n                        </Menu>\n\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                        <Header>\n                            {`Update your ${activeItem === \"billingAddress\" ? \"billing\" : \"shipping\"} address`}\n                        </Header>\n                        <Divider />\n                        <Card.Group>\n                            {addresses.map(a => {\n                                return (\n                                    <Card key={a.id}>\n                                        <Card.Content>\n                                            {a.default && (\n                                                <Label as=\"a\" color=\"blue\" ribbon=\"right\">\n                                                    Default\n                                                </Label>\n                                            )}\n                                            <Card.Header>\n                                                {a.street_address}, {a.apartment_address}\n                                            </Card.Header>\n                                            <Card.Meta>{a.country}</Card.Meta>\n                                            <Card.Description>{a.zip}</Card.Description>\n                                        </Card.Content>\n\n                                        <Card.Content extra>\n                                            <Button color=\"yellow\">Update</Button>\n                                            <Button color=\"red\">Delete</Button>\n                                        </Card.Content>\n\n                                    </Card>\n                                );\n                            })}\n                        </Card.Group>\n                        {addresses.length > 0 ? <Divider /> : null}\n\n                        <AddressForm countries={countries} addresses={addresses} />\n\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}