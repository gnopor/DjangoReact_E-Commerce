{"ast":null,"code":"var _jsxFileName = \"/home/gnop/Videos/django-react-boilerplate/src/containers/Checkout.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe, Elements, StripeProvider } from 'react-stripe-elements';\nimport { Button, Container, Dimmer, Message, Item, Divider, Header, Loader, Segment } from 'semantic-ui-react';\nimport { authAxios } from '../utils';\nimport { checkoutURL, orderSummaryURL } from '../constants';\n\nclass OrderPreview extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      error: null,\n      loading: false\n    };\n\n    this.handleFetchOrder = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(orderSummaryURL).then(res => {\n        //console.log(res.data);\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        if (err.reponse.status === 404) {\n          this.setState({\n            error: \"You currently do not have an order\",\n            loading: false\n          });\n        } else {\n          this.setState({\n            error: err,\n            loading: false\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchOrder();\n  }\n\n  render() {\n    const {\n      data,\n      error,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"Loading\"))), data && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Item.Group, {\n      relaxed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, data.order_items.map((order_item, i) => {\n      console.log(order_item);\n      return /*#__PURE__*/React.createElement(Item, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Item.Image, {\n        size: \"tiny\",\n        src: `http://127.0.0.1:8000${order_item.item_obj.image}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Item.Content, {\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Item.Header, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 45\n        }\n      }, order_item.quantity, \" x \", order_item.item_obj.title), /*#__PURE__*/React.createElement(Item.Extra, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 49\n        }\n      }, \"'\\\"\", order_item.final_price, \"\\\"'\"))));\n    })), /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"Order Total: \")))));\n  }\n\n}\n\nclass CheckoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      success: false\n    };\n\n    this.submit = ev => {\n      ev.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.props.stripe) {\n        this.props.stripe.createToken().then(result => {\n          if (result.error) {\n            this.setState({\n              error: result.error.message,\n              loading: false\n            });\n          } else {\n            authAxios.post(checkoutURL, {\n              stripeToken: result.token.id\n            }).then(res => {\n              this.setState({\n                loading: true,\n                success: true\n              });\n            }).catch(err => {\n              this.setState({\n                loading: false,\n                error: err\n              });\n            });\n          }\n        });\n      } else {\n        console.log(\"Stripe is not loaded\");\n      }\n    };\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      success\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      negative: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, \"Your payment was unsuccessful\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, JSON.stringify(error))), success && /*#__PURE__*/React.createElement(Message, {\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Your payment was successful\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, \"Go to your \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 40\n      }\n    }, \"profile\"), \" to see the order delivery status.\")), /*#__PURE__*/React.createElement(OrderPreview, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Would you like to complete your puchase?\"), /*#__PURE__*/React.createElement(CardElement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submit,\n      primary: true,\n      style: {\n        marginTop: \"10px\"\n      },\n      loading: loading,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst InjectedForm = injectStripe(CheckoutForm);\n\nconst WrappedForm = () => /*#__PURE__*/React.createElement(Container, {\n  text: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(StripeProvider, {\n  apiKey: \"pk_test_ffJsfC2lo7brg48q4ijmDjK000UJ9rB62K\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 17\n  }\n}, \"Complete your order\"), /*#__PURE__*/React.createElement(Elements, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(InjectedForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 21\n  }\n})))));\n\nexport default WrappedForm;","map":{"version":3,"sources":["/home/gnop/Videos/django-react-boilerplate/src/containers/Checkout.js"],"names":["React","Component","CardElement","injectStripe","Elements","StripeProvider","Button","Container","Dimmer","Message","Item","Divider","Header","Loader","Segment","authAxios","checkoutURL","orderSummaryURL","OrderPreview","state","data","error","loading","handleFetchOrder","setState","get","then","res","catch","err","reponse","status","componentDidMount","render","JSON","stringify","order_items","map","order_item","i","console","log","item_obj","image","quantity","title","final_price","CheckoutForm","success","submit","ev","preventDefault","props","stripe","createToken","result","message","post","stripeToken","token","id","marginTop","InjectedForm","WrappedForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    CardElement,\n    injectStripe,\n    Elements,\n    StripeProvider\n} from 'react-stripe-elements';\nimport { Button, Container, Dimmer, Message, Item, Divider, Header, Loader, Segment } from 'semantic-ui-react';\nimport { authAxios } from '../utils';\nimport { checkoutURL, orderSummaryURL } from '../constants';\n\n\n\nclass OrderPreview extends Component {\n\n    state = {\n        data: null,\n        error: null,\n        loading: false\n    }\n\n    componentDidMount() {\n        this.handleFetchOrder();\n    }\n\n    handleFetchOrder = () => {\n        this.setState({ loading: true });\n        authAxios\n            .get(orderSummaryURL)\n            .then(res => {\n                //console.log(res.data);\n                this.setState({ data: res.data, loading: false });\n            })\n            .catch(err => {\n                if (err.reponse.status === 404) {\n                    this.setState({ error: \"You currently do not have an order\", loading: false });\n                } else {\n                    this.setState({ error: err, loading: false });\n                }\n            });\n    };\n\n    render() {\n        const { data, error, loading } = this.state;\n\n        return (\n            <React.Fragment>\n                {error && (\n                    <Message\n                        error\n                        header=\"There was an error\"\n                        content={JSON.stringify(error)}\n                    />\n                )}\n                {loading && (\n                    <Segment>\n                        <Dimmer>\n                            <Loader inverted>Loading</Loader>\n                        </Dimmer>\n                    </Segment>\n                )}\n                {data && (\n                    <React.Fragment>\n                        <Item.Group relaxed>\n                            {data.order_items.map((order_item, i) => {\n                                console.log(order_item);\n                                return (\n                                    <Item key={i}>\n                                        <Item.Image\n                                            size=\"tiny\"\n                                            src={`http://127.0.0.1:8000${order_item.item_obj.image}`}\n                                        />\n\n                                        <Item.Content verticalAlign=\"middle\">\n                                            <Item.Header as=\"a\">\n                                                {order_item.quantity} x {order_item.item_obj.title}\n                                            </Item.Header>\n                                            <Item.Extra>\n                                                <Loader>'\"{order_item.final_price}\"'</Loader>\n                                            </Item.Extra>\n                                        </Item.Content>\n\n\n                                    </Item>\n                                );\n                            })}\n\n                        </Item.Group>\n\n                        <Item.Group>\n                            <Item.Content>\n                                <Item.Header>Order Total: </Item.Header>\n                            </Item.Content>\n                        </Item.Group>\n                    </React.Fragment>\n                )}\n\n            </React.Fragment>\n        );\n    }\n}\n\n\nclass CheckoutForm extends Component {\n\n    state = {\n        loading: false,\n        error: null,\n        success: false\n    }\n\n    submit = (ev) => {\n        ev.preventDefault();\n        this.setState({ loading: true });\n        if (this.props.stripe) {\n            this.props.stripe.createToken()\n                .then(result => {\n                    if (result.error) {\n                        this.setState({ error: result.error.message, loading: false });\n                    } else {\n                        authAxios\n                            .post(checkoutURL, { stripeToken: result.token.id })\n                            .then(res => {\n                                this.setState({ loading: true, success: true });\n                            })\n                            .catch(err => {\n                                this.setState({ loading: false, error: err });\n                            });\n                    }\n                });\n        } else {\n            console.log(\"Stripe is not loaded\");\n        }\n\n    };\n\n    render() {\n        const { error, loading, success } = this.state;\n        return (\n            <div>\n                {error && (\n                    <Message negative>\n                        <Message.Header>Your payment was unsuccessful</Message.Header>\n                        <p>{JSON.stringify(error)}</p>\n                    </Message>\n                )}\n                {success && (\n                    <Message positive>\n                        <Message.Header>Your payment was successful</Message.Header>\n                        <p>\n                            Go to your <b>profile</b> to see the order delivery status.\n                        </p>\n                    </Message>\n                )}\n\n\n                <OrderPreview />\n\n\n                <Divider />\n\n                <Header>Would you like to complete your puchase?</Header>\n                <CardElement />\n                <Button\n                    onClick={this.submit}\n                    primary\n                    style={{ marginTop: \"10px\" }}\n                    loading={loading}\n                    disabled={loading}\n                >\n                    Submit\n                </Button>\n            </div>\n        );\n    }\n}\n\n\nconst InjectedForm = injectStripe(CheckoutForm);\n\n\nconst WrappedForm = () => (\n    <Container text>\n        <StripeProvider apiKey=\"pk_test_ffJsfC2lo7brg48q4ijmDjK000UJ9rB62K\">\n            <div>\n                <h1>Complete your order</h1>\n                <Elements>\n                    <InjectedForm />\n                </Elements>\n\n            </div>\n\n        </StripeProvider>\n    </Container>\n\n);\n\nexport default WrappedForm;"]},"metadata":{},"sourceType":"module"}