{"ast":null,"code":"var _jsxFileName = \"/home/gnop/Videos/django-react-boilerplate/src/containers/Profile.js\";\nimport React from 'react';\nimport { Grid, Header, Dimmer, Loader, Message, Segment, Image, Divider, Menu, Form, Select, Card, Label, Button, Table } from 'semantic-ui-react';\nimport { authAxios } from '../utils';\nimport { Redirect } from 'react-router-dom';\nimport { addressListURL, countryListURL, addressCreateURL, userIDURL, addressUpdateURL, addressDeleteURL, paymentListURL } from '../constants';\nimport { connect } from 'react-redux';\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass PaymentHistory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      payments: []\n    };\n\n    this.handleFetchPayments = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(paymentListURL).then(res => {\n        this.setState({\n          payments: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchPayments();\n  }\n\n  render() {\n    const {\n      payments\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Date\")), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, payments.map(p => {\n      return /*#__PURE__*/React.createElement(Table.Row, {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      }, p.id), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, p.amount), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }\n      }, new Date(p.timestamp).toUTCString()));\n    }))));\n  }\n\n}\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        \"address_type\": \"\",\n        \"apartment_address\": \"\",\n        \"country\": \"\",\n        \"default\": true,\n        \"id\": \"\",\n        \"street_address\": \"\",\n        \"user\": 1,\n        \"zip\": \"\"\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updateFormData = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updateFormData\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updateFormData = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updateFormData\n      });\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updateFormData = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updateFormData\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: true,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: true,\n          success: true\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    const {\n      countries\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Street address\",\n      onChange: this.handleChange,\n      value: formData.street_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Apartment address\",\n      onChange: this.handleChange,\n      value: formData.apartment_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      loading: countries.length < 1,\n      clearable: true,\n      search: true,\n      options: countries,\n      fluid: true,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      value: formData.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"zip\",\n      placeholder: \"Zip code\",\n      onChange: this.handleChange,\n      value: formData.zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      primary: true,\n      disabled: saving,\n      loading: saving,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"billingAddress\",\n      addresses: [],\n      countries: [],\n      userID: null,\n      selectedAddress: null,\n      error: null,\n      loading: false\n    };\n\n    this.handleItemClick = name => {\n      // we use a callback on the setState here because we want the activeItem to be set before \n      // the execution of handleFetchAddress().\n      // withou that, this.handleFetchAddress() is call before this.setState(). there are in different thread\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"billingAddress\") {\n        return \"Billign Address\";\n      } else if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      }\n\n      return \"Payment History\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleSelectedAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }\n      }, addresses.map(a => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: a.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 33\n          }\n        }, a.default && /*#__PURE__*/React.createElement(Label, {\n          as: \"a\",\n          color: \"blue\",\n          ribbon: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 41\n          }\n        }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 37\n          }\n        }, a.street_address, \", \", a.apartment_address), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 37\n          }\n        }, a.country), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 37\n          }\n        }, a.zip)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"yellow\",\n          onClick: () => this.handleSelectedAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 37\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"red\",\n          onClick: () => this.handleDeleteAddress(a.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 37\n          }\n        }, \"Delete\")));\n      })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 41\n        }\n      }) : null, selectedAddress === null ? /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        countries: countries,\n        formType: CREATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }\n      }) : null, selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        countries: countries,\n        address: selectedAddress,\n        formType: UPDATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 21\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 29\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      content: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Image, {\n      src: \"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Payment history\",\n      active: activeItem === \"paymentHistory\",\n      onClick: () => this.handleItemClick(\"paymentHistory\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    }, this.handleGetActiveItem), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 25\n      }\n    }), activeItem === \"paymentHistory\" ? /*#__PURE__*/React.createElement(PaymentHistory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 29\n      }\n    }) : this.renderAddresses())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/home/gnop/Videos/django-react-boilerplate/src/containers/Profile.js"],"names":["React","Grid","Header","Dimmer","Loader","Message","Segment","Image","Divider","Menu","Form","Select","Card","Label","Button","Table","authAxios","Redirect","addressListURL","countryListURL","addressCreateURL","userIDURL","addressUpdateURL","addressDeleteURL","paymentListURL","connect","UPDATE_FORM","CREATE_FORM","PaymentHistory","Component","state","payments","handleFetchPayments","setState","loading","get","then","res","data","catch","err","error","componentDidMount","render","map","p","id","amount","Date","timestamp","toUTCString","AddressForm","formData","saving","success","handleChange","e","updateFormData","target","name","value","handleSelectChange","handleToggleDefault","default","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","user","address_type","callback","put","address","countries","street_address","apartment_address","length","country","zip","JSON","stringify","Profile","addresses","selectedAddress","handleItemClick","handleFetchAddresses","handleGetActiveItem","handleFormatCountries","keys","Object","k","key","text","handleSelectedAddress","handleFetchCountries","handleFetchUserID","handleDeleteAddress","addressID","delete","handleCallback","renderAddresses","a","isAuthenticated","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Header, Dimmer, Loader, Message, Segment, Image, Divider, Menu, Form, Select, Card, Label, Button, Table } from 'semantic-ui-react';\nimport { authAxios } from '../utils';\nimport { Redirect } from 'react-router-dom';\n\nimport {\n    addressListURL,\n    countryListURL,\n    addressCreateURL,\n    userIDURL,\n    addressUpdateURL,\n    addressDeleteURL,\n    paymentListURL\n} from '../constants';\nimport { connect } from 'react-redux';\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\n\n\nclass PaymentHistory extends React.Component {\n\n    state = {\n        payments: []\n    };\n\n    componentDidMount() {\n        this.handleFetchPayments();\n    }\n\n    handleFetchPayments = () => {\n        this.setState({ loading: true })\n        authAxios\n            .get(paymentListURL)\n            .then(res => {\n                this.setState({ payments: res.data, loading: false });\n            })\n            .catch(err => {\n                this.setState({ error: err, loading: false });\n            });\n    };\n\n    render() {\n        const { payments } = this.state;\n        return (\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>ID</Table.HeaderCell>\n                        <Table.HeaderCell>Amount</Table.HeaderCell>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                    </Table.Row>\n                    <Table.Body>\n                        {payments.map(p => {\n                            return (\n                                <Table.Row key={p.id}>\n                                    <Table.Cell>{p.id}</Table.Cell>\n                                    <Table.Cell>{p.amount}</Table.Cell>\n                                    <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\n                                </Table.Row>\n                            );\n                        })}\n                    </Table.Body>\n                </Table.Header>\n            </Table>\n        )\n    }\n}\n\n\nclass AddressForm extends React.Component {\n    state = {\n        error: null,\n        loading: false,\n        formData: {\n            \"address_type\": \"\",\n            \"apartment_address\": \"\",\n            \"country\": \"\",\n            \"default\": true,\n            \"id\": \"\",\n            \"street_address\": \"\",\n            \"user\": 1,\n            \"zip\": \"\"\n        },\n        saving: false,\n        success: false\n    };\n\n    componentDidMount() {\n        const { address, formType } = this.props;\n        if (formType === UPDATE_FORM) {\n            this.setState({ formData: address });\n        }\n    }\n\n    handleChange = e => {\n        const { formData } = this.state;\n        const updateFormData = {\n            ...formData,\n            [e.target.name]: e.target.value\n        };\n        this.setState({\n            formData: updateFormData\n        });\n    };\n\n\n    handleSelectChange = (e, { name, value }) => {\n        const { formData } = this.state;\n        const updateFormData = {\n            ...formData,\n            [name]: value\n        };\n        this.setState({\n            formData: updateFormData\n        });\n    };\n\n\n    handleToggleDefault = () => {\n        const { formData } = this.state;\n        const updateFormData = {\n            ...formData,\n            default: !formData.default\n        };\n        this.setState({\n            formData: updateFormData\n        });\n    };\n\n\n    handleSubmit = e => {\n        this.setState({ saving: true });\n        e.preventDefault();\n        const { formType } = this.props;\n        if (formType === UPDATE_FORM) {\n            this.handleUpdateAddress();\n        } else {\n            this.handleCreateAddress();\n        }\n    };\n\n    handleCreateAddress = () => {\n        const { userID, activeItem } = this.props;\n        const { formData } = this.state;\n        authAxios\n            .post(addressCreateURL, {\n                ...formData,\n                user: userID,\n                address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n            })\n            .then(res => {\n                this.setState({\n                    saving: true,\n                    success: true,\n                    formData: { default: false }\n                });\n                this.props.callback();\n\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n\n    };\n\n    handleUpdateAddress = () => {\n        const { userID, activeItem } = this.props;\n        const { formData } = this.state;\n        authAxios\n            .put(addressUpdateURL(formData.id), {\n                ...formData,\n                user: userID,\n                address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n            })\n            .then(res => {\n                this.setState({ saving: true, success: true });\n                this.props.callback();\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n\n    render() {\n        const { error, formData, success, saving } = this.state;\n        const { countries } = this.props;\n\n        return (\n            <Form onSubmit={this.handleSubmit} success={success} error={error}>\n                <Form.Input\n                    required\n                    name=\"street_address\"\n                    placeholder=\"Street address\"\n                    onChange={this.handleChange}\n                    value={formData.street_address}\n                />\n                <Form.Input\n                    required\n                    name=\"apartment_address\"\n                    placeholder=\"Apartment address\"\n                    onChange={this.handleChange}\n                    value={formData.apartment_address}\n\n                />\n                <Form.Field required>\n                    <Select\n                        loading={countries.length < 1}\n                        clearable\n                        search\n                        options={countries}\n                        fluid\n                        name=\"country\"\n                        placeholder=\"Country\"\n                        onChange={this.handleSelectChange}\n                        value={formData.country}\n\n                    />\n                </Form.Field>\n                <Form.Input\n                    required\n                    name=\"zip\"\n                    placeholder=\"Zip code\"\n                    onChange={this.handleChange}\n                    value={formData.zip}\n                />\n                <Message\n                    success\n                    header=\"Success!\"\n                    content=\"Your address was saved\"\n                />\n                {error && (\n                    <Message\n                        error\n                        header='There was an error'\n                        content={JSON.stringify(error)}\n                    />\n                )}\n                <Form.Checkbox\n                    name=\"default\"\n                    label=\"Make this the default address\"\n                    onChange={this.handleToggleDefault}\n                    checked={formData.default}\n                />\n                <Form.Button primary disabled={saving} loading={saving}>Save</Form.Button>\n\n            </Form>\n        );\n    }\n}\n\n\n\n\nclass Profile extends React.Component {\n    state = {\n        activeItem: \"billingAddress\",\n        addresses: [],\n        countries: [],\n        userID: null,\n        selectedAddress: null,\n        error: null,\n        loading: false\n    };\n\n    componentDidMount() {\n        this.handleFetchAddresses();\n        this.handleFetchCountries();\n        this.handleFetchUserID();\n    }\n\n    handleItemClick = (name) => {\n        // we use a callback on the setState here because we want the activeItem to be set before \n        // the execution of handleFetchAddress().\n        // withou that, this.handleFetchAddress() is call before this.setState(). there are in different thread\n        this.setState({ activeItem: name }, () => {\n            this.handleFetchAddresses();\n        });\n\n    }\n\n    handleGetActiveItem = () => {\n        const { activeItem } = this.state;\n        if (activeItem === \"billingAddress\") {\n            return \"Billign Address\";\n        } else if (activeItem === \"shippingAddress\") {\n            return \"Shipping Address\";\n        }\n\n        return \"Payment History\";\n    };\n\n    handleFormatCountries = countries => {\n        const keys = Object.keys(countries);\n        return keys.map(k => {\n            return {\n                key: k,\n                text: countries[k],\n                value: k\n            };\n        });\n    };\n\n    handleSelectedAddress = address => {\n        this.setState({ selectedAddress: address })\n    }\n\n\n    handleFetchCountries = () => {\n        authAxios\n            .get(countryListURL)\n            .then(res => {\n                this.setState({ countries: this.handleFormatCountries(res.data) });\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n    handleFetchUserID = () => {\n        authAxios\n            .get(userIDURL)\n            .then(res => {\n                this.setState({ userID: res.data.userID });\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n    handleDeleteAddress = (addressID) => {\n        authAxios\n            .delete(addressDeleteURL(addressID))\n            .then(res => {\n                this.handleCallback();\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n\n    handleFetchAddresses = () => {\n        this.setState({ loading: true });\n        const { activeItem } = this.state;\n        authAxios\n            .get(\n                addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")\n            )\n            .then(res => {\n                this.setState({ addresses: res.data, loading: false });\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n\n    handleCallback = () => {\n        this.handleFetchAddresses();\n        this.setState({ selectedAddress: null });\n    };\n\n\n    renderAddresses = () => {\n        const { activeItem, addresses, countries, selectedAddress, userID } = this.state;\n\n        return (\n            <React.Fragment>\n                <Card.Group>\n                    {addresses.map(a => {\n                        return (\n                            <Card key={a.id}>\n                                <Card.Content>\n                                    {a.default && (\n                                        <Label as=\"a\" color=\"blue\" ribbon=\"right\">\n                                            Default\n                                        </Label>\n                                    )}\n                                    <Card.Header>\n                                        {a.street_address}, {a.apartment_address}\n                                    </Card.Header>\n                                    <Card.Meta>{a.country}</Card.Meta>\n                                    <Card.Description>{a.zip}</Card.Description>\n                                </Card.Content>\n\n                                <Card.Content extra>\n                                    <Button\n                                        color=\"yellow\"\n                                        onClick={() => this.handleSelectedAddress(a)}\n                                    >\n                                        Update\n                                            </Button>\n                                    <Button\n                                        color=\"red\"\n                                        onClick={() => this.handleDeleteAddress(a.id)}\n                                    >\n                                        Delete\n                                            </Button>\n                                </Card.Content>\n\n                            </Card>\n                        );\n                    })}\n                </Card.Group>\n                {addresses.length > 0 ? <Divider /> : null}\n                {selectedAddress === null ? (\n                    <AddressForm\n                        activeItem={activeItem}\n                        countries={countries}\n                        formType={CREATE_FORM}\n                        userID={userID}\n                        callback={this.handleCallback}\n                    />\n                ) : null}\n                {selectedAddress && (\n                    <AddressForm\n                        activeItem={activeItem}\n                        countries={countries}\n                        address={selectedAddress}\n                        formType={UPDATE_FORM}\n                        userID={userID}\n                        callback={this.handleCallback}\n                    />\n\n                )}\n\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const { activeItem, error, loading } = this.state;\n\n        const { isAuthenticated } = this.props;\n        if (!isAuthenticated) {\n            return <Redirect to=\"/login\" />\n        }\n\n        return (\n            <Grid container columns={2} divided>\n                <Grid.Row columns={1}>\n                    <Grid.Column>\n                        {error && (\n                            <Message\n                                error\n                                header='There was an error'\n                                content={JSON.stringify(error)}\n                            />\n                        )}\n                        {\n                            loading && (\n                                <Segment>\n                                    <Dimmer active inverted>\n                                        <Loader inverted content='Loading' />\n                                    </Dimmer>\n\n                                    <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                                </Segment>\n                            )\n                        }\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={6}>\n\n                        <Menu pointing vertical fluid>\n                            <Menu.Item\n                                name=\"Billing Address\"\n                                active={activeItem === \"billingAddress\"}\n                                onClick={() => this.handleItemClick(\"billingAddress\")}\n                            />\n                            <Menu.Item\n                                name=\"Shipping Address\"\n                                active={activeItem === \"shippingAddress\"}\n                                onClick={() => this.handleItemClick(\"shippingAddress\")}\n                            />\n                            <Menu.Item\n                                name=\"Payment history\"\n                                active={activeItem === \"paymentHistory\"}\n                                onClick={() => this.handleItemClick(\"paymentHistory\")}\n                            />\n                        </Menu>\n\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                        <Header>\n                            {this.handleGetActiveItem}\n                        </Header>\n                        <Divider />\n\n                        {activeItem === \"paymentHistory\" ? (\n                            <PaymentHistory />\n                        ) : (\n                                this.renderAddresses()\n                            )}\n\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Profile);"]},"metadata":{},"sourceType":"module"}